{"version":3,"sources":["app/modules/ECommerce/pages/customers/customers-loading-dialog/CustomersLoadingDialog.js","app/modules/ECommerce/_redux/customers/customersActions.js","app/modules/ECommerce/_redux/customers/customersCrud.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialogHeader.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditForm.js","app/modules/ECommerce/pages/customers/CustomersUIHelpers.js","app/modules/ECommerce/pages/customers/CustomersUIContext.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialog.js","app/modules/ECommerce/pages/customers/customer-delete-dialog/CustomerDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-delete-dialog/CustomersDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-fetch-dialog/CustomersFetchDialog.js","app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js","app/modules/ECommerce/pages/customers/customers-filter/CustomersFilter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/TypeColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/CustomersTable.js","app/modules/ECommerce/pages/customers/customers-grouping/CustomersGrouping.js","app/modules/ECommerce/pages/customers/CustomersCard.js","app/modules/ECommerce/pages/customers/CustomersPage.js","app/modules/ECommerce/pages/products/products-loading-dialog/ProductsLoadingDialog.js","app/modules/ECommerce/_redux/products/productsActions.js","app/modules/ECommerce/_redux/products/productsCrud.js","app/modules/ECommerce/pages/products/ProductsUIHelpers.js","app/modules/ECommerce/pages/products/ProductsUIContext.js","app/modules/ECommerce/pages/products/product-delete-dialog/ProductDeleteDialog.js","app/modules/ECommerce/pages/products/products-delete-dialog/ProductsDeleteDialog.js","app/modules/ECommerce/pages/products/products-fetch-dialog/ProductsFetchDialog.js","app/modules/ECommerce/pages/products/products-update-status-dialog/ProductsUpdateStatusDialog.js","app/modules/ECommerce/pages/products/products-filter/ProductsFilter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ConditionColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ColorColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/PriceColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/ProductsTable.js","app/modules/ECommerce/pages/products/products-grouping/ProductsGrouping.js","app/modules/ECommerce/pages/products/ProductsCard.js","app/modules/ECommerce/pages/products/ProductsPage.js","app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFilter.js","app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/pages/products/product-specifications/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsTable.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsLoadingDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFetchDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsGrouping.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialogHeader.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.js","app/modules/ECommerce/pages/products/product-specifications/Specifications.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIHelper.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/pages/products/product-remarks/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-remarks/RemarksTable.js","app/modules/ECommerce/pages/products/product-remarks/RemarksLoadingDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarkDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFetchDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksGrouping.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialogHeader.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialog.js","app/modules/ECommerce/pages/products/product-remarks/Remarks.js","app/modules/ECommerce/pages/products/product-edit/ProductEdit.js","app/modules/ECommerce/pages/eCommercePage.js"],"names":["CustomersLoadingDialog","isLoading","useSelector","state","customers","listLoading","shallowEqual","useEffect","text","actions","customersSlice","fetchCustomers","queryParams","dispatch","startCall","callType","callTypes","list","response","totalCount","entities","id","firstName","lastName","email","userName","gender","status","dateOfBbirth","ipAddress","type","customersFetched","fetchCustomer","action","customerId","axios","get","then","customer","data","customerFetched","customerForEdit","catch","error","clientMessage","catchError","undefined","deleteCustomer","delete","customerDeleted","createCustomer","customerForCreation","post","customerCreated","updateCustomer","put","requestFromServer","customerUpdated","updateCustomersStatus","ids","customersStatusUpdated","deleteCustomers","customersDeleted","CustomerEditDialogHeader","actionsLoading","useState","title","setTitle","_title","Modal","Header","closeButton","Title","CustomerEditSchema","Yup","shape","min","max","required","nullable","CustomerEditForm","saveCustomer","onHide","enableReinitialize","initialValues","validationSchema","onSubmit","values","console","log","handleSubmit","Body","className","name","component","Input","placeholder","label","customFeedbackLabel","value","Footer","onClick","CustomerStatusCssClasses","CustomerStatusTitles","CustomerTypeCssClasses","CustomerTypeTitles","defaultSorted","dataField","order","sizePerPageList","initialFilter","filter","sortOrder","sortField","pageNumber","pageSize","CustomersUIContext","createContext","useCustomersUIContext","useContext","Consumer","CustomersUIProvider","customersUIEvents","children","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","initCustomer","newCustomerButtonClick","openEditCustomerDialog","openDeleteCustomerDialog","openDeleteCustomersDialog","openFetchCustomersDialog","openUpdateCustomersStatusDialog","Provider","CustomerEditDialog","show","customersUIContext","customersUIProps","useMemo","useDispatch","size","aria-labelledby","CustomerDeleteDialog","CustomersDeleteDialog","length","selectedCustomers","_customers","forEach","find","el","push","CustomersFetchDialog","map","key","CustomersUpdateStateDialog","setStatus","onChange","e","target","CustomersFilter","applyFilter","newQueryParams","searchText","prepareFilter","handleBlur","setFieldValue","handleChange","onBlur","StatusColumnFormatter","cellContent","row","TypeColumnFormatter","ActionsColumnFormatter","rowIndex","src","toAbsoluteUrl","CustomersTable","currentState","columns","sort","sortCaret","headerSortingClasses","formatter","columnFormatters","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","page","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bordered","bootstrap4","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","CustomersGrouping","CustomersCard","CustomersPage","history","path","match","params","ProductsLoadingDialog","products","productsSlice","fetchProducts","productsFetched","fetchProduct","productId","product","productFetched","productForEdit","deleteProduct","productDeleted","createProduct","productForCreation","productCreated","updateProduct","productUpdated","updateProductsStatus","productsStatusUpdated","deleteProducts","productsDeleted","ProductStatusCssClasses","ProductStatusTitles","ProductConditionCssClasses","ProductConditionTitles","model","manufacture","VINCode","AVAILABLE_COLORS","AVAILABLE_MANUFACTURES","ProductsUIContext","useProductsUIContext","ProductsUIProvider","productsUIEvents","newProductButtonClick","openEditProductPage","openDeleteProductDialog","openDeleteProductsDialog","openFetchProductsDialog","openUpdateProductsStatusDialog","ProductDeleteDialog","productsUIContext","productsUIProps","variant","ProductsDeleteDialog","selectedProducts","_products","ProductsFetchDialog","width","ProductsUpdateStatusDialog","ProductsFilter","condition","ConditionColumnFormatter","ColorColumnFormatter","color","PriceColumnFormatter","price","OverlayTrigger","overlay","Tooltip","ProductsTable","ProductsGrouping","ProductsCard","ProductsPage","ProductEditSchema","modelYear","mileage","ProductEditForm","btnRef","saveProduct","index","as","display","ref","SPECIFICATIONS_DICTIONARY","SpecificationsUIContext","useSpecificationsUIContext","SpecificationsUIProvider","currentProductId","setProductId","selectedId","setSelectedId","initSpecification","specId","carId","showEditSpecificationDialog","setShowEditSpecificationDialog","showDeleteSpecificationDialog","setShowDeleteSpecificationDialog","showDeleteSpecificationsDialog","setShowDeleteSpecificationsDialog","showFetchSpecificationsDialog","setShowFetchSpecificationsDialog","openEditSpecificationDialog","openNewSpecificationDialog","closeEditSpecificationDialog","openDeleteSpecificationDialog","closeDeleteSpecificationDialog","openDeleteSpecificationsDialog","closeDeleteSpecificationsDialog","openFetchSpecificationsDialog","closeFetchSpecificationsDialog","SpecificationsFilter","specsUIContext","specsUIProps","specificationsSlice","fetchSpecifications","specificationsFetched","fetchSpecification","specificationId","specification","specificationFetched","specificationForEdit","deleteSpecification","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","specificationUpdated","deleteSpecifications","specificationsDeleted","SpecificationsTable","specifications","SpecificationsLoadingDialog","SpecificationsDeleteDialog","SpecificationDeleteDialog","selectedSpecifications","_specifications","SpecificationsFetchDialog","SpecificationsGrouping","SpecificationEditDialogHeader","SpecificationEditSchema","SpecificationEditForm","saveSpecification","spec","SpecificationEditDialog","Specifications","RemarksUIContext","useRemarksUIContext","RemarksUIProvider","showEditRemarkDialog","setShowEditRemarkDialog","initRemark","dueDate","showDeleteRemarkDialog","setShowDeleteRemarkDialog","showDeleteRemarksDialog","setShowDeleteRemarksDialog","showFetchRemarksDialog","setShowFetchRemarksDialog","openNewRemarkDialog","openEditRemarkDialog","closeEditRemarkDialog","openDeleteRemarkDialog","closeDeleteRemarkDialog","openDeleteRemarksDialog","closeDeleteRemarksDialog","openFetchRemarksDialog","closeFetchRemarksDialog","RemarksFilter","remarksUIContext","remarksUIProps","remarksSlice","fetchRemarks","remarksFetched","fetchRemark","remarkId","remark","remarkFetched","remarkForEdit","deleteRemark","remarkDeleted","createRemark","remarkForCreation","remarkCreated","updateRemark","remarkUpdated","deleteRemarks","remarksDeleted","RemarksTable","remarks","RemarksLoadingDialog","RemarksDeleteDialog","RemarkDeleteDialog","selectedRemarks","_remarks","RemarksFetchDialog","RemarksGrouping","RemarkEditDialogHeader","RemarkEditSchema","RemarkEditForm","saveRemark","RemarkEditDialog","date","year","getFullYear","month","getMonth","toString","day","getDate","getFormattedDate","Remarks","initProduct","description","ProductEdit","suhbeader","useSubheader","tab","setTab","useRef","backToProductsList","current","click","role","data-toggle","aria-selected","eCommercePage","fallback","exact","from","to"],"mappings":"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","file":"static/js/5.551f8a51.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomersLoadingDialog() {\r\n  // Customers Redux state\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.listLoading }),\r\n    shallowEqual\r\n  );\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import * as requestFromServer from \"./customersCrud\";\r\nimport { customersSlice, callTypes } from \"./customersSlice\";\r\n\r\nconst { actions } = customersSlice;\r\n\r\nexport const fetchCustomers = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  let response = {\r\n    totalCount: 7,\r\n    entities: [\r\n      {\r\n        id: 5,\r\n        firstName: \"a\",\r\n        lastName: \"a\",\r\n        email: \"a\",\r\n        userName: \"a\",\r\n        gender: \"Female\",\r\n        status: 0,\r\n        dateOfBbirth: \"a\",\r\n        ipAddress: \"a\",\r\n        type: 1\r\n      },\r\n      {\r\n        id: 1,\r\n        firstName: \"bb\",\r\n        lastName: \"b\",\r\n        email: \"b\",\r\n        userName: \"b\",\r\n        gender: \"Female\",\r\n        status: 0,\r\n        dateOfBbirth: \"b\",\r\n        ipAddress: \"b\",\r\n        type: 1\r\n      },\r\n      {\r\n        id: 4,\r\n        firstName: \"c\",\r\n        lastName: \"c\",\r\n        email: \"c\",\r\n        userName: \"c\",\r\n        gender: \"Female\",\r\n        status: 0,\r\n        dateOfBbirth: \"c\",\r\n        ipAddress: \"c\",\r\n        type: 1\r\n      }\r\n    ]\r\n  }\r\n  const { totalCount, entities } = response;\r\n  dispatch(actions.customersFetched({ totalCount, entities }));\r\n  return response;\r\n  // return requestFromServer\r\n  //   .findCustomers(queryParams)\r\n  //   .then(response => {\r\n  //     const { totalCount, entities } = response.data;\r\n  //     dispatch(actions.customersFetched({ totalCount, entities }));\r\n  //   })\r\n  //   .catch(error => {\r\n  //     error.clientMessage = \"Can't find customers\";\r\n  //     dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n  //   });\r\n};\r\n\r\nexport const fetchCustomer = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.customerFetched({ customerForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getCustomerById(id)\r\n    .then(response => {\r\n      const customer = response.data;\r\n      dispatch(actions.customerFetched({ customerForEdit: customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCustomer = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCustomer(id)\r\n    .then(response => {\r\n      dispatch(actions.customerDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createCustomer = customerForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createCustomer(customerForCreation)\r\n    .then(response => {\r\n      const { customer } = response.data;\r\n      dispatch(actions.customerCreated({ customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateCustomer = customer => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateCustomer(customer)\r\n    .then(() => {\r\n      dispatch(actions.customerUpdated({ customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateCustomersStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForCustomers(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.customersStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update customers status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCustomers = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCustomers(ids)\r\n    .then(() => {\r\n      dispatch(actions.customersDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete customers\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const CUSTOMERS_URL = \"api/customers\";\r\n\r\n// CREATE =>  POST: add a new customer to the server\r\nexport function createCustomer(customer) {\r\n  return axios.post(CUSTOMERS_URL, { customer });\r\n}\r\n\r\n// READ\r\nexport function getAllCustomers() {\r\n  return axios.get(CUSTOMERS_URL);\r\n}\r\n\r\nexport function getCustomerById(customerId) {\r\n  return axios.get(`${CUSTOMERS_URL}/${customerId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findCustomers(queryParams) {\r\n  return axios.post(`${CUSTOMERS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the customer on the server\r\nexport function updateCustomer(customer) {\r\n  return axios.put(`${CUSTOMERS_URL}/${customer.id}`, { customer });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForCustomers(ids, status) {\r\n  return axios.post(`${CUSTOMERS_URL}/updateStatusForCustomers`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the customer from the server\r\nexport function deleteCustomer(customerId) {\r\n  return axios.delete(`${CUSTOMERS_URL}/${customerId}`);\r\n}\r\n\r\n// DELETE Customers by ids\r\nexport function deleteCustomers(ids) {\r\n  return axios.post(`${CUSTOMERS_URL}/deleteCustomers`, { ids });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomerEditDialogHeader({ id }) {\r\n  // Customers Redux state\r\n  const { customerForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      customerForEdit: state.customers.customerForEdit,\r\n      actionsLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  // Title couting\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Customer\";\r\n    if (customerForEdit && id) {\r\n      _title = `Edit customer '${customerForEdit.firstName} ${customerForEdit.lastName}'`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [customerForEdit, actionsLoading]);\r\n\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst CustomerEditSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(3, \"Minimum 3 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Firstname is required\"),\r\n  lastName: Yup.string()\r\n    .min(3, \"Minimum 3 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Lastname is required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email is required\"),\r\n  userName: Yup.string().required(\"Username is required\"),\r\n  dateOfBbirth: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Date of Birth is required\"),\r\n  ipAddress: Yup.string().required(\"IP Address is required\"),\r\n});\r\n\r\nexport function CustomerEditForm({\r\n  saveCustomer,\r\n  customer,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={customer}\r\n        validationSchema={CustomerEditSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values)\r\n          saveCustomer(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  {/* First Name */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"firstName\"\r\n                      component={Input}\r\n                      placeholder=\"First Name\"\r\n                      label=\"First Name\"\r\n                    />\r\n                  </div>\r\n                  {/* Last Name */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"lastName\"\r\n                      component={Input}\r\n                      placeholder=\"Last Name\"\r\n                      label=\"Last Name\"\r\n                    />\r\n                  </div>\r\n                  {/* Login */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"userName\"\r\n                      component={Input}\r\n                      placeholder=\"Login\"\r\n                      label=\"Login\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* Email */}\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      component={Input}\r\n                      placeholder=\"Email\"\r\n                      label=\"Email\"\r\n                    />\r\n                  </div>\r\n                  {/* Date of birth */}\r\n                  <div className=\"col-lg-4\">\r\n                    <DatePickerField\r\n                      name=\"dateOfBbirth\"\r\n                      label=\"Date of Birth\"\r\n                    />\r\n                  </div>\r\n                  {/* IP Address */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"ipAddress\"\r\n                      component={Input}\r\n                      placeholder=\"IP Address\"\r\n                      label=\"IP Address\"\r\n                      customFeedbackLabel=\"We'll never share customer IP Address with anyone else\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  {/* Gender */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Select name=\"Gender\" label=\"Gender\">\r\n                      <option value=\"Female\">Female</option>\r\n                      <option value=\"Male\">Male</option>\r\n                    </Select>\r\n                  </div>\r\n                  {/* Type */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Business</option>\r\n                      <option value=\"1\">Individual</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const CustomerStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\r\nexport const CustomerStatusTitles = [\"Suspended\", \"Active\", \"Pending\", \"\"];\r\nexport const CustomerTypeCssClasses = [\"success\", \"primary\", \"\"];\r\nexport const CustomerTypeTitles = [\"Business\", \"Individual\", \"\"];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n  { text: \"10\", value: 10 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    lastName: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    ipAddress: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"id\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\n","import React, {createContext, useContext, useState, useCallback} from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./CustomersUIHelpers\";\r\n\r\nconst CustomersUIContext = createContext();\r\n\r\nexport function useCustomersUIContext() {\r\n  return useContext(CustomersUIContext);\r\n}\r\n\r\nexport const CustomersUIConsumer = CustomersUIContext.Consumer;\r\n\r\nexport function CustomersUIProvider({customersUIEvents, children}) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const initCustomer = {\r\n    id: undefined,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    userName: \"\",\r\n    gender: \"Female\",\r\n    status: 0,\r\n    dateOfBbirth: \"\",\r\n    ipAddress: \"\",\r\n    type: 1\r\n  };\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    initCustomer,\r\n    newCustomerButtonClick: customersUIEvents.newCustomerButtonClick,\r\n    openEditCustomerDialog: customersUIEvents.openEditCustomerDialog,\r\n    openDeleteCustomerDialog: customersUIEvents.openDeleteCustomerDialog,\r\n    openDeleteCustomersDialog: customersUIEvents.openDeleteCustomersDialog,\r\n    openFetchCustomersDialog: customersUIEvents.openFetchCustomersDialog,\r\n    openUpdateCustomersStatusDialog: customersUIEvents.openUpdateCustomersStatusDialog\r\n  };\r\n\r\n  return <CustomersUIContext.Provider value={value}>{children}</CustomersUIContext.Provider>;\r\n}","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { CustomerEditDialogHeader } from \"./CustomerEditDialogHeader\";\r\nimport { CustomerEditForm } from \"./CustomerEditForm\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomerEditDialog({ id, show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      initCustomer: customersUIContext.initCustomer,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, customerForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.customers.actionsLoading,\r\n      customerForEdit: state.customers.customerForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server call for getting Customer by id\r\n    dispatch(actions.fetchCustomer(id));\r\n  }, [id, dispatch]);\r\n\r\n  // server request for saving customer\r\n  const saveCustomer = (customer) => {\r\n    if (!id) {\r\n      // server request for creating customer\r\n      dispatch(actions.createCustomer(customer)).then(() => onHide());\r\n    } else {\r\n      // server request for updating customer\r\n      dispatch(actions.updateCustomer(customer)).then(() => onHide());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <CustomerEditDialogHeader id={id} />\r\n      <CustomerEditForm\r\n        saveCustomer={saveCustomer}\r\n        actionsLoading={actionsLoading}\r\n        customer={customerForEdit || customersUIProps.initCustomer}\r\n        onHide={onHide}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {useCustomersUIContext} from \"../CustomersUIContext\";\r\n\r\nexport function CustomerDeleteDialog({ id, show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCustomer = () => {\r\n    // server request for deleting customer by id\r\n    dispatch(actions.deleteCustomer(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n      // clear selections list\r\n      customersUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {/*begin::Loading*/}\r\n      {isLoading && <ModalProgressBar />}\r\n      {/*end::Loading*/}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customer Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this customer?</span>\r\n        )}\r\n        {isLoading && <span>Customer is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomer}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomersDeleteDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if customers weren't selected we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCustomers = () => {\r\n    // server request for deleting customer by selected ids\r\n    dispatch(actions.deleteCustomers(customersUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n        () => {\r\n          // clear selections list\r\n          customersUIProps.setIds([]);\r\n          // closing delete modal\r\n          onHide();\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {/*begin::Loading*/}\r\n      {isLoading && <ModalProgressBar />}\r\n      {/*end::Loading*/}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customers Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected customers?</span>\r\n        )}\r\n        {isLoading && <span>Customer are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomers}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { CustomerStatusCssClasses } from \"../CustomersUIHelpers\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersFetchDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if customers weren't selected we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"timeline timeline-5 mt-3\">\r\n          {customers.map((customer) => (\r\n            <div className=\"timeline-item align-items-start\" key={`id${customer.id}`}>\r\n              <div className=\"timeline-label font-weight-bolder text-dark-75 font-size-lg text-right pr-3\" />\r\n              <div className=\"timeline-badge\">\r\n                <i\r\n                  className={`fa fa-genderless text-${\r\n                    CustomerStatusCssClasses[customer.status]\r\n                  } icon-xxl`}\r\n                />\r\n              </div>\r\n              <div className=\"timeline-content text-dark-50 mr-5\">\r\n                <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                  >\r\n                    ID: {customer.id}\r\n                </span>\r\n                <span className=\"ml-3\">{customer.lastName}, {customer.firstName}</span>                \r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { CustomerStatusCssClasses } from \"../CustomersUIHelpers\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersUpdateStateDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers, isLoading } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n      isLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for update customers status by selected ids\r\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            customersUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected customers\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block\">\r\n        {/*begin::Loading*/}\r\n        {isLoading && (\r\n          <div className=\"overlay-layer\">\r\n            <div className=\"spinner spinner-lg spinner-primary\" />\r\n          </div>\r\n        )}\r\n        {/*end::Loading*/}\r\n\r\n        <div className=\"timeline timeline-5 mt-3\">\r\n          {customers.map((customer) => (\r\n            <div\r\n              className=\"timeline-item align-items-start\"\r\n              key={`customersUpdate${customer.id}`}\r\n            >\r\n              <div className=\"timeline-label font-weight-bolder text-dark-75 font-size-lg text-right pr-3\" />\r\n              <div className=\"timeline-badge\">\r\n                <i\r\n                  className={`fa fa-genderless text-${\r\n                    CustomerStatusCssClasses[customer.status]\r\n                  } icon-xxl`}\r\n                />\r\n              </div>\r\n              <div className=\"timeline-content text-dark-50 mr-5\">\r\n                <span\r\n                  className={`label label-lg label-light-${\r\n                    CustomerStatusCssClasses[customer.status]\r\n                  } label-inline`}\r\n                >\r\n                  ID: {customer.id}\r\n                </span>\r\n                <span className=\"ml-3\">\r\n                  {customer.lastName}, {customer.firstName}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className=\"form-control\"\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Suspended</option>\r\n            <option value=\"1\">Active</option>\r\n            <option value=\"2\">Pending</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate mr-3\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, type, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? +status : undefined;\r\n  // Filter by type\r\n  filter.type = type !== \"\" ? +type : undefined;\r\n  // Filter by all fields\r\n  filter.lastName = searchText;\r\n  if (searchText) {\r\n    filter.firstName = searchText;\r\n    filter.email = searchText;\r\n    filter.ipAddress = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function CustomersFilter({ listLoading }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // queryParams, setQueryParams,\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(customersUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, customersUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      // update list by queryParams\r\n      customersUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Susspended=0/Active=1/Pending=2\r\n          type: \"\", // values => All=\"\"/Business=0/Individual=1\r\n          searchText: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by Status\"\r\n                  // TODO: Change this code\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Susspended</option>\r\n                  <option value=\"1\">Active</option>\r\n                  <option value=\"2\">Pending</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Type\"\r\n                  name=\"type\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"type\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.type}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Business</option>\r\n                  <option value=\"1\">Individual</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Type\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nimport React from \"react\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../../CustomersUIHelpers\";\r\n\r\nexport function StatusColumnFormatter(cellContent, row) {\r\n  const getLabelCssClasses = () => {\r\n    return `label label-lg label-light-${\r\n      CustomerStatusCssClasses[row.status]\r\n    } label-inline`;\r\n  };\r\n  return (\r\n    <span className={getLabelCssClasses()}>\r\n      {CustomerStatusTitles[row.status]}\r\n    </span>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nimport React from \"react\";\r\nimport {\r\n  CustomerTypeCssClasses,\r\n  CustomerTypeTitles,\r\n} from \"../../CustomersUIHelpers\";\r\n\r\nexport function TypeColumnFormatter(cellContent, row) {\r\n  return (\r\n    <>\r\n      <span\r\n        className={`label label-dot label-${\r\n          CustomerTypeCssClasses[row.type]\r\n        } mr-2`}\r\n      ></span>\r\n      &nbsp;\r\n      <span className={`font-bold font-${CustomerTypeCssClasses[row.type]}`}>\r\n        {CustomerTypeTitles[row.type]}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport function ActionsColumnFormatter(\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditCustomerDialog, openDeleteCustomerDialog }\r\n) {\r\n  return (\r\n    <>\r\n      <a\r\n        title=\"Edit customer\"\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditCustomerDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n      <> </>\r\n\r\n      <a\r\n        title=\"Delete customer\"\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteCustomerDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </>\r\n  );\r\n}\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n  headerSortingClasses,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as uiHelpers from \"../CustomersUIHelpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersTable() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n      openEditCustomerDialog: customersUIContext.openEditCustomerDialog,\r\n      openDeleteCustomerDialog: customersUIContext.openDeleteCustomerDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Getting curret state of customers list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.customers }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    customersUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"firstName\",\r\n      text: \"Firstname\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"lastName\",\r\n      text: \"Lastname\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"gender\",\r\n      text: \"Gender\",\r\n      sort: false,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"type\",\r\n      text: \"Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.TypeColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditCustomerDialog: customersUIProps.openEditCustomerDialog,\r\n        openDeleteCustomerDialog: customersUIProps.openDeleteCustomerDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: customersUIProps.queryParams.pageSize,\r\n    page: customersUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                bordered={false}\r\n                classes=\"table table-head-custom table-vertical-center\"\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  customersUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: customersUIProps.ids,\r\n                  setIds: customersUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersGrouping() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      openDeleteCustomersDialog: customersUIContext.openDeleteCustomersDialog,\r\n      openFetchCustomersDialog: customersUIContext.openFetchCustomersDialog,\r\n      openUpdateCustomersStatusDialog:\r\n        customersUIContext.openUpdateCustomersStatusDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger\">\r\n                <span>\r\n                  Selected records count: <b>{customersUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openDeleteCustomersDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openFetchCustomersDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openUpdateCustomersStatusDialog}\r\n              >\r\n                <i className=\"fa fa-sync-alt\"></i> Update Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { CustomersFilter } from \"./customers-filter/CustomersFilter\";\r\nimport { CustomersTable } from \"./customers-table/CustomersTable\";\r\nimport { CustomersGrouping } from \"./customers-grouping/CustomersGrouping\";\r\nimport { useCustomersUIContext } from \"./CustomersUIContext\";\r\n\r\nexport function CustomersCard() {\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      newCustomerButtonClick: customersUIContext.newCustomerButtonClick,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Customers list\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={customersUIProps.newCustomerButtonClick}\r\n          >\r\n            New Customer\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CustomersFilter />\r\n        {customersUIProps.ids.length > 0 && <CustomersGrouping />}\r\n        <CustomersTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CustomersLoadingDialog } from \"./customers-loading-dialog/CustomersLoadingDialog\";\r\nimport { CustomerEditDialog } from \"./customer-edit-dialog/CustomerEditDialog\";\r\nimport { CustomerDeleteDialog } from \"./customer-delete-dialog/CustomerDeleteDialog\";\r\nimport { CustomersDeleteDialog } from \"./customers-delete-dialog/CustomersDeleteDialog\";\r\nimport { CustomersFetchDialog } from \"./customers-fetch-dialog/CustomersFetchDialog\";\r\nimport { CustomersUpdateStateDialog } from \"./customers-update-status-dialog/CustomersUpdateStateDialog\";\r\nimport { CustomersUIProvider } from \"./CustomersUIContext\";\r\nimport { CustomersCard } from \"./CustomersCard\";\r\n\r\nexport function CustomersPage({ history }) {\r\n  const customersUIEvents = {\r\n    newCustomerButtonClick: () => {\r\n      history.push(\"/e-commerce/customers/new\");\r\n    },\r\n    openEditCustomerDialog: (id) => {\r\n      history.push(`/e-commerce/customers/${id}/edit`);\r\n    },\r\n    openDeleteCustomerDialog: (id) => {\r\n      history.push(`/e-commerce/customers/${id}/delete`);\r\n    },\r\n    openDeleteCustomersDialog: () => {\r\n      history.push(`/e-commerce/customers/deleteCustomers`);\r\n    },\r\n    openFetchCustomersDialog: () => {\r\n      history.push(`/e-commerce/customers/fetch`);\r\n    },\r\n    openUpdateCustomersStatusDialog: () => {\r\n      history.push(\"/e-commerce/customers/updateStatus\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CustomersUIProvider customersUIEvents={customersUIEvents}>\r\n      <CustomersLoadingDialog />\r\n      <Route path=\"/e-commerce/customers/new\">\r\n        {({ history, match }) => (\r\n          <CustomerEditDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/:id/edit\">\r\n        {({ history, match }) => (\r\n          <CustomerEditDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/deleteCustomers\">\r\n        {({ history, match }) => (\r\n          <CustomersDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/:id/delete\">\r\n        {({ history, match }) => (\r\n          <CustomerDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/fetch\">\r\n        {({ history, match }) => (\r\n          <CustomersFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/updateStatus\">\r\n        {({ history, match }) => (\r\n          <CustomersUpdateStateDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <CustomersCard />\r\n    </CustomersUIProvider>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function ProductsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.products.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import * as requestFromServer from \"./productsCrud\";\r\nimport {productsSlice, callTypes} from \"./productsSlice\";\r\n\r\nconst {actions} = productsSlice;\r\n\r\nexport const fetchProducts = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .findProducts(queryParams)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.productsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchProduct = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.productFetched({ productForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getProductById(id)\r\n    .then(response => {\r\n      const product = response.data;\r\n      dispatch(actions.productFetched({ productForEdit: product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProduct = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProduct(id)\r\n    .then(response => {\r\n      dispatch(actions.productDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createProduct = productForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createProduct(productForCreation)\r\n    .then(response => {\r\n      const { product } = response.data;\r\n      dispatch(actions.productCreated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProduct = product => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateProduct(product)\r\n    .then(() => {\r\n      dispatch(actions.productUpdated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProductsStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForProducts(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.productsStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update products status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProducts = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProducts(ids)\r\n    .then(() => {\r\n      dispatch(actions.productsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const PRODUCTS_URL = \"api/products\";\r\n\r\n// CREATE =>  POST: add a new product to the server\r\nexport function createProduct(product) {\r\n  return axios.post(PRODUCTS_URL, { product });\r\n}\r\n\r\n// READ\r\nexport function getAllProducts() {\r\n  return axios.get(PRODUCTS_URL);\r\n}\r\n\r\nexport function getProductById(productId) {\r\n  return axios.get(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findProducts(queryParams) {\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateProduct(product) {\r\n  return axios.put(`${PRODUCTS_URL}/${product.id}`, { product });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForProducts(ids, status) {\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForProducts`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the product from the server\r\nexport function deleteProduct(productId) {\r\n  return axios.delete(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// DELETE Products by ids\r\nexport function deleteProducts(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/deleteProducts`, { ids });\r\n}\r\n","export const ProductStatusCssClasses = [\"success\", \"info\", \"\"];\r\nexport const ProductStatusTitles = [\"Selling\", \"Sold\"];\r\nexport const ProductConditionCssClasses = [\"success\", \"danger\", \"\"];\r\nexport const ProductConditionTitles = [\"New\", \"Used\"];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n  { text: \"10\", value: 10 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    model: \"\",\r\n    manufacture: \"\",\r\n    VINCode: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"VINCode\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\nexport const AVAILABLE_COLORS = [\r\n  \"Red\",\r\n  \"CadetBlue\",\r\n  \"Eagle\",\r\n  \"Gold\",\r\n  \"LightSlateGrey\",\r\n  \"RoyalBlue\",\r\n  \"Crimson\",\r\n  \"Blue\",\r\n  \"Sienna\",\r\n  \"Indigo\",\r\n  \"Green\",\r\n  \"Violet\",\r\n  \"GoldenRod\",\r\n  \"OrangeRed\",\r\n  \"Khaki\",\r\n  \"Teal\",\r\n  \"Purple\",\r\n  \"Orange\",\r\n  \"Pink\",\r\n  \"Black\",\r\n  \"DarkTurquoise\"\r\n];\r\n\r\nexport const AVAILABLE_MANUFACTURES = [\r\n  \"Pontiac\",\r\n  \"Kia\",\r\n  \"Lotus\",\r\n  \"Subaru\",\r\n  \"Jeep\",\r\n  \"Isuzu\",\r\n  \"Mitsubishi\",\r\n  \"Oldsmobile\",\r\n  \"Chevrolet\",\r\n  \"Chrysler\",\r\n  \"Audi\",\r\n  \"Suzuki\",\r\n  \"GMC\",\r\n  \"Cadillac\",\r\n  \"Infinity\",\r\n  \"Mercury\",\r\n  \"Dodge\",\r\n  \"Ram\",\r\n  \"Lexus\",\r\n  \"Lamborghini\",\r\n  \"Honda\",\r\n  \"Nissan\",\r\n  \"Ford\",\r\n  \"Hyundai\",\r\n  \"Saab\",\r\n  \"Toyota\"\r\n];\r\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./ProductsUIHelpers\";\r\n\r\nconst ProductsUIContext = createContext();\r\n\r\nexport function useProductsUIContext() {\r\n  return useContext(ProductsUIContext);\r\n}\r\n\r\nexport const ProductsUIConsumer = ProductsUIContext.Consumer;\r\n\r\nexport function ProductsUIProvider({ productsUIEvents, children }) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    newProductButtonClick: productsUIEvents.newProductButtonClick,\r\n    openEditProductPage: productsUIEvents.openEditProductPage,\r\n    openDeleteProductDialog: productsUIEvents.openDeleteProductDialog,\r\n    openDeleteProductsDialog: productsUIEvents.openDeleteProductsDialog,\r\n    openFetchProductsDialog: productsUIEvents.openFetchProductsDialog,\r\n    openUpdateProductsStatusDialog:\r\n      productsUIEvents.openUpdateProductsStatusDialog,\r\n  };\r\n\r\n  return (\r\n    <ProductsUIContext.Provider value={value}>\r\n      {children}\r\n    </ProductsUIContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductDeleteDialog({ id, show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteProduct = () => {\r\n    // server request for deleting product by id\r\n    dispatch(actions.deleteProduct(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n      // clear selections list\r\n      productsUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Product Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this product?</span>\r\n        )}\r\n        {isLoading && <span>Product is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProduct}\r\n            className=\"btn btn-delete btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsDeleteDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const deleteProducts = () => {\r\n    // server request for deleting product by seleted ids\r\n    dispatch(actions.deleteProducts(productsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(() => {\r\n        // clear selections list\r\n        productsUIProps.setIds([]);\r\n        // closing delete modal\r\n        onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Products Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected products?</span>\r\n        )}\r\n        {isLoading && <span>Products are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProducts}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsFetchDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected ids we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsUpdateStatusDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products, isLoading } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n      isLoading: state.products.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing product by ids\r\n    dispatch(actions.updateProductsStatus(productsUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            productsUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected products\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${ProductStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Selling</option>\r\n            <option value=\"1\">Sold</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, condition, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? +status : undefined;\r\n  // Filter by condition\r\n  filter.condition = condition !== \"\" ? +condition : undefined;\r\n  // Filter by all fields\r\n  filter.model = searchText;\r\n  if (searchText) {\r\n    filter.manufacture = searchText;\r\n    filter.VINCode = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function ProductsFilter({ listLoading }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(productsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, productsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      productsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Selling=0/Sold=1\r\n          condition: \"\", // values => All=\"\"/New=0/Used=1\r\n          searchText: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by Status\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Selling</option>\r\n                  <option value=\"1\">Sold</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Type\"\r\n                  name=\"condition\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"condition\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.condition}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">New</option>\r\n                  <option value=\"1\">Used</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Condition\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  ProductStatusCssClasses,\r\n  ProductStatusTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const StatusColumnFormatter = (cellContent, row) => (\r\n  <span\r\n    className={`label label-lg label-light-${\r\n      ProductStatusCssClasses[row.status]\r\n    } label-inline`}\r\n  >\r\n    {ProductStatusTitles[row.status]}\r\n  </span>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  ProductConditionCssClasses,\r\n  ProductConditionTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const ConditionColumnFormatter = (cellContent, row) => (\r\n  <>\r\n    <span\r\n      className={`badge badge-${\r\n        ProductConditionCssClasses[row.condition]\r\n      } badge-dot`}\r\n    ></span>\r\n    &nbsp;\r\n    <span\r\n      className={`font-bold font-${\r\n        ProductConditionCssClasses[row.condition]\r\n      }`}\r\n    >\r\n      {ProductConditionTitles[row.condition]}\r\n    </span>\r\n  </>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const ColorColumnFormatter = (cellContent, row) => (\r\n  <span style={{ color: row.color }}>{row.color}</span>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const PriceColumnFormatter = (cellContent, row) => <>${row.price}</>;\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditProductPage, openDeleteProductDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-edit-tooltip\">Edit product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditProductPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-delete-tooltip\">Delete product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteProductDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport * as uiHelpers from \"../ProductsUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsTable() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.products }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    productsUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"VINCode\",\r\n      text: \"VIN Code (ID)\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"manufacture\",\r\n      text: \"Manufacture\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"model\",\r\n      text: \"Model\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"modelYear\",\r\n      text: \"Model Year\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"color\",\r\n      text: \"Color\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ColorColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"price\",\r\n      text: \"Price\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.PriceColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"condition\",\r\n      text: \"Condition\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ConditionColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditProductPage: productsUIProps.openEditProductPage,\r\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: productsUIProps.queryParams.pageSize,\r\n    page: productsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  productsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: productsUIProps.ids,\r\n                  setIds: productsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsGrouping() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"-font-bold font-danger-\">\r\n                <span>\r\n                  Selected records count: <b>{productsUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openDeleteProductsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openFetchProductsDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openUpdateProductsStatusDialog}\r\n              >\r\n                <i className=\"fa fa-sync-alt\"></i> Update Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\r\nimport { ProductsTable } from \"./products-table/ProductsTable\";\r\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\r\nimport { useProductsUIContext } from \"./ProductsUIContext\";\r\n\r\nexport function ProductsCard() {\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      newProductButtonClick: productsUIContext.newProductButtonClick,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Products list\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={productsUIProps.newProductButtonClick}\r\n          >\r\n            New Product\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ProductsFilter />\r\n        {productsUIProps.ids.length > 0 && (\r\n          <>\r\n            <ProductsGrouping />\r\n          </>\r\n        )}\r\n        <ProductsTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { ProductsLoadingDialog } from \"./products-loading-dialog/ProductsLoadingDialog\";\r\nimport { ProductDeleteDialog } from \"./product-delete-dialog/ProductDeleteDialog\";\r\nimport { ProductsDeleteDialog } from \"./products-delete-dialog/ProductsDeleteDialog\";\r\nimport { ProductsFetchDialog } from \"./products-fetch-dialog/ProductsFetchDialog\";\r\nimport { ProductsUpdateStatusDialog } from \"./products-update-status-dialog/ProductsUpdateStatusDialog\";\r\nimport { ProductsCard } from \"./ProductsCard\";\r\nimport { ProductsUIProvider } from \"./ProductsUIContext\";\r\n\r\nexport function ProductsPage({ history }) {\r\n  const productsUIEvents = {\r\n    newProductButtonClick: () => {\r\n      history.push(\"/e-commerce/products/new\");\r\n    },\r\n    openEditProductPage: (id) => {\r\n      history.push(`/e-commerce/products/${id}/edit`);\r\n    },\r\n    openDeleteProductDialog: (id) => {\r\n      history.push(`/e-commerce/products/${id}/delete`);\r\n    },\r\n    openDeleteProductsDialog: () => {\r\n      history.push(`/e-commerce/products/deleteProducts`);\r\n    },\r\n    openFetchProductsDialog: () => {\r\n      history.push(`/e-commerce/products/fetch`);\r\n    },\r\n    openUpdateProductsStatusDialog: () => {\r\n      history.push(\"/e-commerce/products/updateStatus\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ProductsUIProvider productsUIEvents={productsUIEvents}>\r\n      <ProductsLoadingDialog />\r\n      <Route path=\"/e-commerce/products/deleteProducts\">\r\n        {({ history, match }) => (\r\n          <ProductsDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/:id/delete\">\r\n        {({ history, match }) => (\r\n          <ProductDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/fetch\">\r\n        {({ history, match }) => (\r\n          <ProductsFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/updateStatus\">\r\n        {({ history, match }) => (\r\n          <ProductsUpdateStatusDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <ProductsCard />\r\n    </ProductsUIProvider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  ProductStatusTitles,\r\n  ProductConditionTitles,\r\n} from \"../ProductsUIHelpers\";\r\n\r\n// Validation schema\r\nconst ProductEditSchema = Yup.object().shape({\r\n  model: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Model is required\"),\r\n  manufacture: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Manufacture is required\"),\r\n  modelYear: Yup.number()\r\n    .min(1950, \"1950 is minimum\")\r\n    .max(2020, \"2020 is maximum\")\r\n    .required(\"Model year is required\"),\r\n  mileage: Yup.number()\r\n    .min(0, \"0 is minimum\")\r\n    .max(1000000, \"1000000 is maximum\")\r\n    .required(\"Mileage is required\"),\r\n  color: Yup.string().required(\"Color is required\"),\r\n  price: Yup.number()\r\n    .min(1, \"$1 is minimum\")\r\n    .max(1000000, \"$1000000 is maximum\")\r\n    .required(\"Price is required\"),\r\n  VINCode: Yup.string().required(\"VINCode is required\"),\r\n});\r\n\r\nexport function ProductEditForm({\r\n  product,\r\n  btnRef,\r\n  saveProduct,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={product}\r\n        validationSchema={ProductEditSchema}\r\n        onSubmit={(values) => {\r\n          saveProduct(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"model\"\r\n                    component={Input}\r\n                    placeholder=\"Model\"\r\n                    label=\"Model\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"manufacture\" label=\"Color\">\r\n                    {AVAILABLE_MANUFACTURES.map((manufacture) => (\r\n                      <option key={manufacture} value={manufacture}>\r\n                        {manufacture}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"modelYear\"\r\n                    component={Input}\r\n                    placeholder=\"Model year\"\r\n                    label=\"Model year\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"mileage\"\r\n                    component={Input}\r\n                    placeholder=\"Mileage\"\r\n                    label=\"Mileage\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"color\" label=\"Color\">\r\n                    {AVAILABLE_COLORS.map((color) => (\r\n                      <option key={color} value={color}>\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    component={Input}\r\n                    placeholder=\"Price\"\r\n                    label=\"Price ($)\"\r\n                    customFeedbackLabel=\"Please enter Price\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"VINCode\"\r\n                    component={Input}\r\n                    placeholder=\"VIN code\"\r\n                    label=\"VIN code\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"status\" label=\"Status\">\r\n                    {ProductStatusTitles.map((status, index) => (\r\n                      <option key={status} value={index}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"condition\" label=\"Condition\">\r\n                    {ProductConditionTitles.map((condition, index) => (\r\n                      <option key={condition} value={index}>\r\n                        {condition}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <Field\r\n                  name=\"description\"\r\n                  as=\"textarea\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: productId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentProductId;\r\n    initSpecification.productId = currentProductId;\r\n    setProductId(currentProductId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.value = searchText;\r\n  if (searchText) {\r\n    filter.name = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function SpecificationsFilter() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      openNewSpecificationDialog: specsUIContext.openNewSpecificationDialog,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(specsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, specsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      specsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            <Formik\r\n              initialValues={{\r\n                searchText: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                applyFilter(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleBlur,\r\n                handleChange,\r\n                setFieldValue,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      onBlur={handleBlur}\r\n                      value={values.searchText}\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"searchText\", e.target.value);\r\n                        handleSubmit();\r\n                      }}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <b>Search</b> in all fields\r\n                    </small>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"col-md-7 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-3 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => specsUIProps.openNewSpecificationDialog()}\r\n            >\r\n              Create new specification\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport function ActionsColumnFormatter(\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditSpecificationDialog, openDeleteSpecificationDialog }\r\n) {\r\n  return (\r\n    <>\r\n      <OverlayTrigger\r\n        overlay={<Tooltip id=\"specs-edit-tooltip\">Edit specification</Tooltip>}\r\n      >\r\n        <a\r\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n          onClick={() => openEditSpecificationDialog(row.id)}\r\n        >\r\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n            <SVG\r\n              src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n            />\r\n          </span>\r\n        </a>\r\n      </OverlayTrigger>\r\n\r\n      <> </>\r\n      <OverlayTrigger\r\n        overlay={\r\n          <Tooltip id=\"spec-delete-tooltip\">Delete specification</Tooltip>\r\n        }\r\n      >\r\n        <a\r\n          className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n          onClick={() => openDeleteSpecificationDialog(row.id)}\r\n        >\r\n          <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n            <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n          </span>\r\n        </a>\r\n      </OverlayTrigger>\r\n    </>\r\n  );\r\n}\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./SpecificationsUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsTable() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: specsUIContext.queryParams,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      openEditSpecificationDialog: specsUIContext.openEditSpecificationDialog,\r\n      openDeleteSpecificationDialog:\r\n        specsUIContext.openDeleteSpecificationDialog,\r\n      ids: specsUIContext.ids,\r\n      setIds: specsUIContext.setIds,\r\n      productId: specsUIContext.productId,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.specifications }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    specsUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchSpecifications(specsUIProps.queryParams,specsUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.queryParams, dispatch, specsUIProps.productId]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Specification Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"value\",\r\n      text: \"Value\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditSpecificationDialog: specsUIProps.openEditSpecificationDialog,\r\n        openDeleteSpecificationDialog:\r\n          specsUIProps.openDeleteSpecificationDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: specsUIProps.queryParams.pageSize,\r\n    page: specsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  specsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: specsUIProps.ids,\r\n                  setIds: specsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsDeleteDialog() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      productId: specsUIContext.productId,\r\n      ids: specsUIContext.ids,\r\n      show: specsUIContext.showDeleteSpecificationsDialog,\r\n      onHide: specsUIContext.closeDeleteSpecificationsDialog,\r\n      setIds: specsUIContext.setIds,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected specs we should close modal\r\n  useEffect(() => {\r\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.ids]);\r\n\r\n  const deleteSpecifications = () => {\r\n    // server request for selected deleting specs\r\n    dispatch(actions.deleteSpecifications(specsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchSpecifications(\r\n          specsUIProps.queryParams,\r\n          specsUIProps.productId\r\n        )\r\n      ).then(() => {\r\n        specsUIProps.setIds([]);\r\n        specsUIProps.onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Specifications Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>\r\n            Are you sure to permanently delete selected specifications?\r\n          </span>\r\n        )}\r\n        {isLoading && <span>Specifications are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteSpecifications}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationDeleteDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      productId: specsUIContext.productId,\r\n      show: specsUIContext.showDeleteSpecificationDialog,\r\n      onHide: specsUIContext.closeDeleteSpecificationDialog,\r\n      queryParams: specsUIContext.queryParams,\r\n      setIds: specsUIContext.setIds,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!specsUIProps.id) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteSpecification = () => {\r\n    // server request for deleting spec by id\r\n    dispatch(actions.deleteSpecification(specsUIProps.id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchSpecifications(\r\n          specsUIProps.queryParams,\r\n          specsUIProps.productId\r\n        )\r\n      );\r\n      specsUIProps.setIds([]);\r\n      specsUIProps.onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Specification Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this specification?</span>\r\n        )}\r\n        {isLoading && <span>Specification is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteSpecification}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nconst selectedSpecifications = (entities, ids) => {\r\n  const _specifications = [];\r\n  ids.forEach((id) => {\r\n    const specification = entities.find((el) => el.id === id);\r\n    if (specification) {\r\n      _specifications.push(specification);\r\n    }\r\n  });\r\n  return _specifications;\r\n};\r\n\r\nexport function SpecificationsFetchDialog() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      ids: specsUIContext.ids,\r\n      show: specsUIContext.showFetchSpecificationsDialog,\r\n      onHide: specsUIContext.closeFetchSpecificationsDialog,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const { specifications } = useSelector(\r\n    (state) => ({\r\n      specifications: selectedSpecifications(\r\n        state.specifications.entities,\r\n        specsUIProps.ids\r\n      ),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {specifications.map((specification) => (\r\n              <div className=\"list-timeline-item mb-3\" key={specification.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {specification.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {specification.name}: {specification.value}{\" \"}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsGrouping() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      ids: specsUIContext.ids,\r\n      openDeleteSpecificationsDialog:\r\n        specsUIContext.openDeleteSpecificationsDialog,\r\n      openFetchSpecificationsDialog:\r\n        specsUIContext.openFetchSpecificationsDialog,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger mt-5\">\r\n                <span>Selected records count: {specsUIProps.ids.length}</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group-inline\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={specsUIProps.openDeleteSpecificationsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={specsUIProps.openFetchSpecificationsDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationEditDialogHeader({ id }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  // Specs Redux state\r\n  const { specificationForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n      actionsLoading: state.specifications.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Specification\";\r\n    if (specificationForEdit && id) {\r\n      _title = \"Edit Specification\";\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [specificationForEdit, actionsLoading]);\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\r\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\r\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\r\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\r\n\r\nexport function SpecificationEditDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      show: specsUIContext.showEditSpecificationDialog,\r\n      onHide: specsUIContext.closeEditSpecificationDialog,\r\n      productId: specsUIContext.productId,\r\n      queryParams: specsUIContext.queryParams,\r\n      initSpecification: specsUIContext.initSpecification,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specifications Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, specificationForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.specifications.actionsLoading,\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting spec by seleted id\r\n    dispatch(actions.fetchSpecification(specsUIProps.id));\r\n  }, [specsUIProps.id, dispatch]);\r\n\r\n  const saveSpecification = (specification) => {\r\n    if (!specsUIProps.id) {\r\n      dispatch(actions.createSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    } else {\r\n      dispatch(actions.updateSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <SpecificationEditDialogHeader id={specsUIProps.id} />\r\n      <SpecificationEditForm\r\n        saveSpecification={saveSpecification}\r\n        actionsLoading={actionsLoading}\r\n        specification={specificationForEdit || specsUIProps.initSpecification}\r\n        onHide={specsUIProps.onHide}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { SpecificationsFilter } from \"./SpecificationsFilter\";\r\nimport { SpecificationsTable } from \"./SpecificationsTable\";\r\nimport { SpecificationsLoadingDialog } from \"./SpecificationsLoadingDialog\";\r\nimport { SpecificationsDeleteDialog } from \"./SpecificationsDeleteDialog\";\r\nimport { SpecificationDeleteDialog } from \"./SpecificationDeleteDialog\";\r\nimport { SpecificationsFetchDialog } from \"./SpecificationsFetchDialog\";\r\nimport { SpecificationsGrouping } from \"./SpecificationsGrouping\";\r\nimport { SpecificationEditDialog } from \"./specification-edit-dialog/SpecificationEditDialog\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function Specifications() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return { ids: specsUIContext.ids };\r\n  }, [specsUIContext]);\r\n\r\n  return (\r\n    <>\r\n      <SpecificationsLoadingDialog />\r\n      <SpecificationEditDialog />\r\n      <SpecificationDeleteDialog />\r\n      <SpecificationsDeleteDialog />\r\n      <SpecificationsFetchDialog />\r\n      <div className=\"form margin-b-30\">\r\n        <SpecificationsFilter />\r\n        {specsUIProps.ids.length > 0 && (\r\n          <>\r\n            <SpecificationsGrouping />\r\n            <br />\r\n          </>\r\n        )}\r\n      </div>\r\n      <SpecificationsTable />\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    text: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"id\",\r\n  pageNumber: 1,\r\n  pageSize: 5\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: productId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.productId = currentProductId;\r\n    initRemark.carId = currentProductId;\r\n    setProductId(currentProductId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.text = searchText;\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function RemarksFilter() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\r\n      queryParams: remarksUIContext.queryParams,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      remarksUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            <Formik\r\n              initialValues={{\r\n                searchText: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                applyFilter(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleBlur,\r\n                handleChange,\r\n                setFieldValue,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      onBlur={handleBlur}\r\n                      value={values.searchText}\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"searchText\", e.target.value);\r\n                        handleSubmit();\r\n                      }}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <b>Search</b> in all fields\r\n                    </small>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"col-md-8 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-2 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => remarksUIProps.openNewRemarkDialog()}\r\n            >\r\n              Create new remark\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      console.log(\"delete return\");\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditRemarkDialog, openDeleteRemarkDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-edit-tooltip\">Edit remark</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditRemarkDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-delete-tooltip\">Delete remark</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteRemarkDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./RemarksUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksTable() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      setIds: remarksUIContext.setIds,\r\n      queryParams: remarksUIContext.queryParams,\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      productId: remarksUIContext.productId,\r\n      openEditRemarkDialog: remarksUIContext.openEditRemarkDialog,\r\n      openDeleteRemarkDialog: remarksUIContext.openDeleteRemarkDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.remarks }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    remarksUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.queryParams, dispatch, remarksUIProps.productId]);\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"text\",\r\n      text: \"Text\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"dueDate\",\r\n      text: \"Due date\",\r\n      sort: false,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditRemarkDialog: remarksUIProps.openEditRemarkDialog,\r\n        openDeleteRemarkDialog: remarksUIProps.openDeleteRemarkDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: remarksUIProps.queryParams.pageSize,\r\n    page: remarksUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  remarksUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: remarksUIProps.ids,\r\n                  setIds: remarksUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function RemarksLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.remarks.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksDeleteDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showDeleteRemarksDialog: remarksUIContext.showDeleteRemarksDialog,\r\n      closeDeleteRemarksDialog: remarksUIContext.closeDeleteRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeDeleteRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  const deleteRemarks = () => {\r\n    dispatch(actions.deleteRemarks(remarksUIProps.ids)).then(() => {\r\n      dispatch(\r\n        actions.fetchRemarks(\r\n          remarksUIProps.queryParams,\r\n          remarksUIProps.productId\r\n        )\r\n      ).then(() => {\r\n        remarksUIProps.setIds([]);\r\n        remarksUIProps.closeDeleteRemarksDialog();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showDeleteRemarksDialog}\r\n      onHide={remarksUIProps.closeDeleteRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Remarks Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected remarks?</span>\r\n        )}\r\n        {isLoading && <span>Remarks are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeDeleteRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteRemarks}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarkDeleteDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showDeleteRemarkDialog: remarksUIContext.showDeleteRemarkDialog,\r\n      closeDeleteRemarkDialog: remarksUIContext.closeDeleteRemarkDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!remarksUIProps.id) {\r\n      remarksUIProps.closeDeleteRemarkDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteRemark = () => {\r\n    // server request for deleting remark by id\r\n    dispatch(actions.deleteRemark(remarksUIProps.id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchRemarks(\r\n          remarksUIProps.queryParams,\r\n          remarksUIProps.productId\r\n        )\r\n      );\r\n      // clear selections list\r\n      remarksUIProps.setIds([]);\r\n      // closing delete modal\r\n      remarksUIProps.closeDeleteRemarkDialog();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showDeleteRemarkDialog}\r\n      onHide={remarksUIProps.closeDeleteRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Remark Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this remark?</span>\r\n        )}\r\n        {isLoading && <span>Remark is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeDeleteRemarkDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteRemark}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst selectedRemarks = (entities, ids) => {\r\n  const _remarks = [];\r\n  ids.forEach((id) => {\r\n    const remark = entities.find((el) => el.id === id);\r\n    if (remark) {\r\n      _remarks.push(remark);\r\n    }\r\n  });\r\n  return _remarks;\r\n};\r\n\r\nexport function RemarksFetchDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showFetchRemarksDialog: remarksUIContext.showFetchRemarksDialog,\r\n      closeFetchRemarksDialog: remarksUIContext.closeFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const { remarks } = useSelector(\r\n    (state) => ({\r\n      remarks: selectedRemarks(state.remarks.entities, remarksUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeFetchRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showFetchRemarksDialog}\r\n      onHide={remarksUIProps.closeFetchRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {remarks.map((remark) => (\r\n              <div className=\"list-timeline-item mb-3\" key={remark.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {remark.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">{remark.text} </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksGrouping() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      openDeleteRemarksDialog: remarksUIContext.openDeleteRemarksDialog,\r\n      openFetchRemarksDialog: remarksUIContext.openFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger mt-5\">\r\n                <span>Selected records count: {remarksUIProps.ids.length}</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group-inline\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={remarksUIProps.openDeleteRemarksDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={remarksUIProps.openFetchRemarksDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function RemarkEditDialogHeader({ id }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  // Remarks Redux state\r\n  const { remarkForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n      actionsLoading: state.remarks.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Remark\";\r\n    if (remarkForEdit && id) {\r\n      _title = \"Edit remark\";\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [remarkForEdit, actionsLoading]);\r\n\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/remarks/remarksActions\";\r\nimport { RemarkEditDialogHeader } from \"./RemarkEditDialogHeader\";\r\nimport { RemarkEditForm } from \"./RemarkEditForm\";\r\nimport { useRemarksUIContext } from \"../RemarksUIContext\";\r\n\r\nfunction getFormattedDate(date) {\r\n  if (typeof date === \"string\") {\r\n    return date;\r\n  }\r\n\r\n  var year = date.getFullYear();\r\n\r\n  var month = (1 + date.getMonth()).toString();\r\n  month = month.length > 1 ? month : \"0\" + month;\r\n\r\n  var day = date.getDate().toString();\r\n  day = day.length > 1 ? day : \"0\" + day;\r\n\r\n  return month + \"/\" + day + \"/\" + year;\r\n}\r\n\r\nexport function RemarkEditDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showEditRemarkDialog: remarksUIContext.showEditRemarkDialog,\r\n      closeEditRemarkDialog: remarksUIContext.closeEditRemarkDialog,\r\n      initRemark: remarksUIContext.initRemark,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, remarkForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.remarks.actionsLoading,\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting remark by seleted id\r\n    dispatch(actions.fetchRemark(remarksUIProps.id));\r\n  }, [remarksUIProps.id, dispatch]);\r\n\r\n  const saveRemark = (remark) => {\r\n    remark.dueDate = getFormattedDate(remark.dueDate);\r\n    if (!remarksUIProps.id) {\r\n      // server request for creating remarks\r\n      dispatch(actions.createRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    } else {\r\n      // server request for updating remarks\r\n      dispatch(actions.updateRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          // refresh list after deletion\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showEditRemarkDialog}\r\n      onHide={remarksUIProps.closeEditRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <RemarkEditDialogHeader id={remarksUIProps.id} />\r\n      <RemarkEditForm\r\n        saveRemark={saveRemark}\r\n        actionsLoading={actionsLoading}\r\n        remark={remarkForEdit || remarksUIProps.initRemark}\r\n        onHide={remarksUIProps.closeEditRemarkDialog}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { RemarksFilter } from \"./RemarksFilter\";\r\nimport { RemarksTable } from \"./RemarksTable\";\r\nimport { RemarksLoadingDialog } from \"./RemarksLoadingDialog\";\r\nimport { RemarksDeleteDialog } from \"./RemarksDeleteDialog\";\r\nimport { RemarkDeleteDialog } from \"./RemarkDeleteDialog\";\r\nimport { RemarksFetchDialog } from \"./RemarksFetchDialog\";\r\nimport { RemarksGrouping } from \"./RemarksGrouping\";\r\nimport { RemarkEditDialog } from \"./remark-edit-dialog/RemarkEditDialog\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function Remarks() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return { ids: remarksUIContext.ids };\r\n  }, [remarksUIContext]);\r\n\r\n  return (\r\n    <>\r\n      <RemarksLoadingDialog />\r\n      <RemarkEditDialog />\r\n      <RemarkDeleteDialog />\r\n      <RemarksDeleteDialog />\r\n      <RemarksFetchDialog />\r\n      <div className=\"form margin-b-30\">\r\n        <RemarksFilter />\r\n        {remarksUIProps.ids.length > 0 && <RemarksGrouping />}\r\n      </div>\r\n      <RemarksTable />\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { ProductEditForm } from \"./ProductEditForm\";\r\nimport { Specifications } from \"../product-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../product-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../product-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../product-remarks/Remarks\";\r\n\r\nconst initProduct = {\r\n  id: undefined,\r\n  model: \"\",\r\n  manufacture: \"Pontiac\",\r\n  modelYear: 2020,\r\n  mileage: 0,\r\n  description: \"\",\r\n  color: \"Red\",\r\n  price: 10000,\r\n  condition: 1,\r\n  status: 0,\r\n  VINCode: \"\",\r\n};\r\n\r\nexport function ProductEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, productForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.products.actionsLoading,\r\n      productForEdit: state.products.productForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchProduct(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Product\";\r\n    if (productForEdit && id) {\r\n      _title = `Edit product '${productForEdit.manufacture} ${productForEdit.model} - ${productForEdit.modelYear}'`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productForEdit, id]);\r\n\r\n  const saveProduct = (values) => {\r\n    if (!id) {\r\n      dispatch(actions.createProduct(values)).then(() => backToProductsList());\r\n    } else {\r\n      dispatch(actions.updateProduct(values)).then(() => backToProductsList());\r\n    }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveProductClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n    }\r\n  };\r\n\r\n  const backToProductsList = () => {\r\n    history.push(`/e-commerce/products`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToProductsList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button className=\"btn btn-light ml-2\">\r\n            <i className=\"fa fa-redo\"></i>\r\n            Reset\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary ml-2\"\r\n            onClick={saveProductClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ul className=\"nav nav-tabs nav-tabs-line \" role=\"tablist\">\r\n          <li className=\"nav-item\" onClick={() => setTab(\"basic\")}>\r\n            <a\r\n              className={`nav-link ${tab === \"basic\" && \"active\"}`}\r\n              data-toggle=\"tab\"\r\n              role=\"tab\"\r\n              aria-selected={(tab === \"basic\").toString()}\r\n            >\r\n              Basic info\r\n            </a>\r\n          </li>\r\n          {id && (\r\n            <>\r\n              {\" \"}\r\n              <li className=\"nav-item\" onClick={() => setTab(\"remarks\")}>\r\n                <a\r\n                  className={`nav-link ${tab === \"remarks\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"button\"\r\n                  aria-selected={(tab === \"remarks\").toString()}\r\n                >\r\n                  Product remarks\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\" onClick={() => setTab(\"specs\")}>\r\n                <a\r\n                  className={`nav-link ${tab === \"specs\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"tab\"\r\n                  aria-selected={(tab === \"specs\").toString()}\r\n                >\r\n                  Product specifications\r\n                </a>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <div className=\"mt-5\">\r\n          {tab === \"basic\" && (\r\n            <ProductEditForm\r\n              actionsLoading={actionsLoading}\r\n              product={productForEdit || initProduct}\r\n              btnRef={btnRef}\r\n              saveProduct={saveProduct}\r\n            />\r\n          )}\r\n          {tab === \"remarks\" && id && (\r\n            <RemarksUIProvider currentProductId={id}>\r\n              <Remarks />\r\n            </RemarksUIProvider>\r\n          )}\r\n          {tab === \"specs\" && id && (\r\n            <SpecificationsUIProvider currentProductId={id}>\r\n              <Specifications />\r\n            </SpecificationsUIProvider>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { CustomersPage } from \"./customers/CustomersPage\";\r\nimport { ProductsPage } from \"./products/ProductsPage\";\r\nimport { ProductEdit } from \"./products/product-edit/ProductEdit\";\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../_metronic/layout\";\r\n\r\nexport default function eCommercePage() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        {\r\n          /* Redirect from eCommerce root URL to /customers */\r\n          <Redirect\r\n            exact={true}\r\n            from=\"/e-commerce\"\r\n            to=\"/e-commerce/customers\"\r\n          />\r\n        }\r\n        <ContentRoute path=\"/e-commerce/customers\" component={CustomersPage} />\r\n        <ContentRoute path=\"/e-commerce/products/new\" component={ProductEdit} />\r\n        <ContentRoute\r\n          path=\"/e-commerce/products/:id/edit\"\r\n          component={ProductEdit}\r\n        />\r\n\r\n        <ContentRoute path=\"/e-commerce/products\" component={ProductsPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}